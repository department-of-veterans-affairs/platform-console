name: Release and Update Manifests

on:
  workflow_call:
    inputs:
      ecr_repository:
        required: true #platform-console
        type: string
      manifests_directory:
        required: true #vsp-tools-backend/platform-console-api
        type: string
      auto_deploy_envs:
       required: true # utility
       type: string
    secrets:
      aws_access_key_id: #${{ secrets.AWS_ACCESS_KEY_ID }}
        required: true
      aws_secret_access_key: #${{ secrets.AWS_SECRET_ACCESS_KEY }}
        required: true
env:
  IMAGE_NAME: "008577686731.dkr.ecr.us-gov-west-1.amazonaws.com/dsva/${{inputs.ecr_repository}}:${{inputs.ecr_repository}}-${{ github.sha }}"

jobs:
  prepare-values:
    runs-on: ubuntu-20.04
    outputs:
      environments: ${{ steps.set-environments.outputs.environments }}
    steps:
      - name: Set to auto deploy environments on push to master
        run: |
         echo "triggered via schedule"
         echo "environments=${{inputs.auto_deploy_envs}}" >> $GITHUB_ENV
      - name: Set output
        id: set-environments
        run: |
          echo "::set-output name=environments::${{ env.environments }}"
  release:
    needs: [prepare-values]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: "us-gov-west-1"

      - name: Log into ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get bot token from Parameter Store
        uses: marvinpinto/action-inject-ssm-secrets@latest
        with:
          ssm_parameter: /devops/VA_VSP_BOT_GITHUB_TOKEN
          env_variable_name: VA_VSP_BOT_GITHUB_TOKEN

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        id: semantic
        env:
          GITHUB_TOKEN: ${{ env.VA_VSP_BOT_GITHUB_TOKEN }}

      - name: Install yq if needed
        run: |
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys CC86BB64
          sudo add-apt-repository ppa:rmescandon/yq
          sudo apt update
          sudo apt install yq -y

      - name: Check out Manifest Repo
        uses: actions/checkout@v2
        with:
          repository: department-of-veterans-affairs/vsp-infra-application-manifests
          token: ${{ env.VA_VSP_BOT_GITHUB_TOKEN }}
          fetch-depth: 1
          path: vsp-infra-application-manifests

      - name: Update image name in Manifest repo
        if: steps.semantic.outputs.new_release_published == 'true'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: dsva/${{inputs.ecr_repository}}
        run: |
          cd vsp-infra-application-manifests/apps/${{inputs.manifests_directory}}
          envs=( ${{ needs.prepare-values.outputs.environments }} )
          for env in ${envs[*]}; do
            yq e -i '.spec.template.spec.containers.[0].image = $IMAGE_NAME' $env/deployment.yml
            yq e -i '.spec.template.spec.initContainers.[0].image = $IMAGE_NAME' $env/deployment.yml
          done

      - name: Add and Commit file
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: EndBug/add-and-commit@v7
        with:
          branch: main
          add: '*'
          cwd: vsp-infra-application-manifests/apps/${{inputs.manifests_directory}}
          author_name: va-vsp-bot
          author_email: devops@va.gov
          message: 'Release ${{ needs.prepare-values.outputs.environments }} for ${{inputs.ecr_repository}}.'
